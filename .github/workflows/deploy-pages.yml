name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  workflow_run:
    workflows: ["Nightly Data Update"]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

    - name: Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      with:
        node-version: '20.x'

    - name: Setup pnpm
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
      with:
        run_install: false

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Compile organisation data
      run: |
        echo "Compiling organisation data..."
        pnpm run compile

        echo "Data file size: $(du -h dist/orgs.json | cut -f1)"
        echo "Total organisations: $(jq '.organisations | length' dist/orgs.json)"
      env:
        NODE_OPTIONS: --max-old-space-size=8192

    - name: Build website
      run: |
        # Generate metadata file if not exists
        if [ ! -f "dist/metadata.json" ]; then
          cat > dist/metadata.json << EOF
        {
          "lastUpdated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "organisationCount": $(jq '.organisations | length' dist/orgs.json),
          "fileSize": $(stat -f%z "dist/orgs.json" 2>/dev/null || stat -c%s "dist/orgs.json" 2>/dev/null),
          "githubRepo": "${{ github.repository }}"
        }
        EOF
        fi

        # Website files are already in dist/

    - name: Setup Pages
      uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4

    - name: Output deployment URL
      run: |
        echo "Website deployed to: ${{ steps.deployment.outputs.page_url }}"
        echo "Data available at: ${{ steps.deployment.outputs.page_url }}data/orgs.json"